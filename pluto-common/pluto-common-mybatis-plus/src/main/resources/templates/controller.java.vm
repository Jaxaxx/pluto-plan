package ${package.Controller};

import com.mine.common.core.util.R;

import com.mine.${package.ModuleName}.dto.${entity}DTO;
import ${package.Service}.${table.serviceName};
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import lombok.RequiredArgsConstructor;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;


#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * @description: 【${table.comment}】控制层
 * @author: Generated by ${author}
 * @create: ${date}
 */
@Slf4j
@Api(tags = {"【$!{table.comment}】模块API"})
    #if(${restControllerStyle})
@RestController
    #else
@Controller
    #end
@RequiredArgsConstructor
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    #if(${table.serviceName})
        #set ($tableServiceNameFormat=${table.serviceName})
        #set ($tableServiceName = $tableServiceNameFormat.substring(0,1).toLowerCase() + $tableServiceNameFormat.substring(1,$tableServiceNameFormat.length()))
    #end
    private final ${table.serviceName}  $tableServiceName;

    @ApiOperation(value = "$!{table.comment}列表查询")
    @GetMapping
    public R list(${entity}DTO dto){
        return R.ok(${tableServiceName}.list(dto));
    }

    @ApiOperation(value = "$!{table.comment}详细查询")
    @GetMapping("/{id}")
    public R detail(@PathVariable("id") Long Id ){
        return R.ok(${tableServiceName}.detail(Id));
    }

    @ApiOperation(value = "$!{table.comment}添加")
    @PostMapping
    public R insert(@RequestBody ${entity}DTO dto){
        ${tableServiceName}.insert(dto);
        return R.ok();
    }

    @ApiOperation(value = "$!{table.comment}更新")
    @PutMapping
    public R update(@RequestBody ${entity}DTO dto){
        ${tableServiceName}.update(dto);
        return R.ok();
    }

    @ApiOperation(value = "$!{table.comment}删除")
    @DeleteMapping("/{id}")
    public R delete(@PathVariable("id") Long id){
        ${tableServiceName}.delete(id);
        return R.ok();
    }
}

#end