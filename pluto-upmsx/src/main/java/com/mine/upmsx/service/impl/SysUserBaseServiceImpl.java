package com.mine.upmsx.service.impl;

import cn.hutool.core.bean.BeanUtil;
import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.mine.common.core.util.MapperUtils;
import com.mine.common.core.util.WebUtils;
import com.mine.common.feign.entity.SysUserBaseVO;
import com.mine.common.security.util.PasswordEncoderUtil;
import com.mine.upmsx.dto.SysUserBaseDTO;
import com.mine.upmsx.entity.SysUserBase;
import com.mine.upmsx.mapper.SysUserBaseMapper;
import com.mine.upmsx.service.ISysUserBaseService;
import lombok.AllArgsConstructor;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.servlet.http.HttpServletRequest;
import java.util.List;
import java.util.Objects;

/**
 * @description: 【登录信息表】实现层
 * @author: Generated by Jax-li
 * @create: 2020-08-12
 * @version: v1.0
 */
@Slf4j
@Service
@RequiredArgsConstructor
public class SysUserBaseServiceImpl extends ServiceImpl<SysUserBaseMapper, SysUserBase> implements ISysUserBaseService {

    private final SysUserBaseMapper sysUserBaseMapper;

    @Override
    public List<SysUserBaseVO> list(SysUserBaseDTO dto) {
        HttpServletRequest request = WebUtils.getRequest();
        List<SysUserBase> sysUserBases = sysUserBaseMapper.selectList(new QueryWrapper<>());
        List<SysUserBaseVO> sysUserBaseVOS = MapperUtils.INSTANCE.mapAsList(SysUserBaseVO.class, sysUserBases);
        return sysUserBaseVOS;
    }

    @Override
    public SysUserBaseVO detail(Long id) {
        SysUserBase sysUserBase = baseMapper.selectById(id);
        return BeanUtil.copyProperties(sysUserBase, SysUserBaseVO.class);
    }

    @Override
    public void insert(SysUserBaseDTO dto) {
        HttpServletRequest request = WebUtils.getRequest();
        String password = dto.getPassword();
        String encode = PasswordEncoderUtil.encode(password);
        dto.setPassword(encode);
        SysUserBase sysUserBase = BeanUtil.copyProperties(dto, SysUserBase.class);
        baseMapper.insert(sysUserBase);
    }

    @Override
    public void update(SysUserBaseDTO dto) {
        SysUserBase sysUserBase = baseMapper.selectById(dto.getId());
        BeanUtil.copyProperties(dto, sysUserBase);
        baseMapper.updateById(sysUserBase);
    }

    @Override
    public void delete(Long id) {
        baseMapper.deleteById(id);
    }

    @Override
    public SysUserBaseVO getUserByUserName(String userName) {
        SysUserBase sysUserBase = baseMapper.selectOne(new LambdaQueryWrapper<SysUserBase>()
                .eq(SysUserBase::getUserName, userName)
        );
        if (Objects.isNull(sysUserBase)) {
            return null;
        }
        return BeanUtil.copyProperties(sysUserBase, SysUserBaseVO.class);
    }
}
